name: Build and Upload

on:
  push:
    branches: [main, add-workflows]
  pull_request:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-2022, ubuntu-22.04]
        include:
          - os: windows-2022
            compiler: msvc
          - os: ubuntu-22.04
            compiler: gcc

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup C++ Toolchain
        uses: aminya/setup-cpp@v1
        with:
          compiler: msvc
          vcvarsall: true
          cmake: true
          ninja: true

      - name: Install Clang Tools (Linux)
        if: matrix.os == 'ubuntu-22.04'
        run: sudo apt-get update && sudo apt-get install -y --no-install-recommends clang-tidy clang-format
      
      - name: Install Clang Tools (Windows)
        if: matrix.os == 'windows-2022'
        run: choco install llvm -y

      - name: Configure CMake
        run: >
          cmake -S . -B build
          -DCMAKE_BUILD_TYPE=Release
          -DCMAKE_EXPORT_COMPILE_COMMANDS=ON
          -G "Ninja"

      - name: Run clang-format check (formatter)
        run: find src -name '*.cpp' -o -name '*.h' | xargs clang-format --dry-run --Werror
      
      - name: Run clang-tidy analysis (linter)
        run: clang-tidy -p build src/*.cpp -- -std=c++17 -I./src

      - name: Install .NET SDK (required for WiX v4)
        if: matrix.os == 'windows-2022'
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '7.0.100'
          
      - name: Install WiX v4 CLI (required for CPack on Windows)
        if: matrix.os == 'windows-2022'
        run: dotnet tool install --global wix --version 4.0.4

      - name: Add WiX UI extension
        if: matrix.os == 'windows-2022'
        run: wix extension add --global WixToolset.UI.wixext/4.0.4

      - name: Build binary/executable
        run: cmake --build build

      - name: Build installers
        run: cmake --build build --target package

      - name: Upload executable and installer (Windows)
        if: matrix.os == 'windows-2022'
        uses: actions/upload-artifact@v4
        with:
          name: ParseIdentify-Windows
          path: | 
            build/*.exe
            build/*.msi

      - name: Upload binary and installers (Linux)
        if: matrix.os == 'ubuntu-22.04'
        uses: actions/upload-artifact@v4
        with:
          name: ParseIdentify-Linux
          path: |
            build/ParseIdentify
            build/*.deb
            build/*.tar.gz
